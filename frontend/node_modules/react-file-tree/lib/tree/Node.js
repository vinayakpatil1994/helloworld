'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _NodeCaret = require('./NodeCaret');

var _NodeCaret2 = _interopRequireDefault(_NodeCaret);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isDirectory = function isDirectory(type) {
  return type === 'directory';
};

var Node = function (_Component) {
  _inherits(Node, _Component);

  function Node() {
    _classCallCheck(this, Node);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Node).call(this));

    _this.state = {};
    return _this;
  }

  _createClass(Node, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props;
      var node = _props.node;
      var metadata = _props.metadata;
      var depth = _props.depth;
      var type = node.type;
      var name = node.name;
      var path = node.path;
      var expanded = metadata.expanded;
      var selected = metadata.selected;
      var hover = this.state.hover;


      return _react2.default.createElement(
        'div',
        { style: (0, _styles.getPaddedStyle)(depth, selected, hover),
          onMouseEnter: function onMouseEnter() {
            return _this2.setState({ hover: true });
          },
          onMouseLeave: function onMouseLeave() {
            return _this2.setState({ hover: false });
          }
        },
        isDirectory(type) && _react2.default.createElement(_NodeCaret2.default, {
          expanded: expanded
        }),
        _react2.default.createElement(
          'div',
          { style: _styles2.default.nodeText },
          name
        )
      );
    }
  }]);

  return Node;
}(_react.Component);

exports.default = Node;